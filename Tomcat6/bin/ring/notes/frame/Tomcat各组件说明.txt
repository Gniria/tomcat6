资料参考：
http://thinkinmylife.iteye.com/blog/805058

各组件基本介绍：
Container：
可以理解为处理某类型请求的容器，处理的方式一般为【把处理请求的处理器包装为Valve对象】，并【按一定顺序放入类型为Pipeline的管道里】。  
Container里包含一些基础服务，如Loader、Manager和Realm。
包括以下类型：

Engine：
Engine包含Host和Context，接到请求后仍给相应的Host在相应的Context里处理。

Host：
Engine下可以配置多个虚拟主机Virtual Host，每个虚拟主机都有一个域名 
当Engine获得一个请求时，它把该请求匹配到某个Host上，然后把该请求交给该Host来处理 
Engine有一个默认虚拟主机，当请求无法匹配到任何一个Host上的时候，将交给该默认Host来处理

Context：
【一个Context对应于一个Web Application】，【一个Web Application由一个或者多个Servlet组成 】。
Context在创建的时候将根据配置文件$CATALINA_HOME/conf/web.xml$WEBAPP_HOME/WEB-INF/web.xml载入Servlet类 。
当Context获得请求时，将在自己的映射表(mapping table)中寻找相匹配的Servlet类

Wrapper：
Wrapper是针对每个Servlet的Container，【每个Servlet都有相应的Wrapper来管理】。


- Bootstrap - 载入JVM自带的类和$JAVA_HOME/jre/lib/ext/*.jar
- System - 载入$CLASSPATH/*.class，$CATALINA_HOME/bin/bootstrap.jar...
- Common - 载入$CATALINA_HOME/common/...，它们对TOMCAT和所有的WEB APP都可见
- Catalina - 载入$CATALINA_HOME/server/...，它们仅对TOMCAT可见，对所有的WEB APP都不可见
- Shared - 载入$CATALINA_HOME/shared/...，它们仅对所有WEB APP可见，对TOMCAT不可见（也不必见）
- WebApp - 载入ContextBase/WEB-INF/classes...，ContextBase/WEB-INF/lib；它们仅对该WEB APP可见